<!doctype html>
<html class="no-js" lang="{{ request.locale.iso_code }}">
    <head>
<link rel='preconnect dns-prefetch' href='https://triplewhale-pixel.web.app/' crossorigin />
<link rel='preconnect dns-prefetch' href='https://api.config-security.com/' crossorigin />
<script>
/* >> TriplePixel :: start*/
~function(W,H,A,L,E,_,B,N){function O(U,T,H,R){void 0===R&&(R=!1),H=new XMLHttpRequest,H.open("GET",U,!0),H.send(null),H.onreadystatechange=function(){4===H.readyState&&200===H.status?(R=H.responseText,U.includes(".txt")?eval(R):N[B]=R):(299<H.status||H.status<200)&&T&&!R&&(R=!0,O(U,T-1))}}if(N=window,!N[H+"sn"]){N[H+"sn"]=1;try{A.setItem(H,1+(0|A.getItem(H)||0)),(E=JSON.parse(A.getItem(H+"U")||"[]")).push(location.href),A.setItem(H+"U",JSON.stringify(E))}catch(e){}A.getItem('"!nC`')||(A=N,A[H]||(L=function(){return Date.now().toString(36)+"_"+Math.random().toString(36)},E=A[H]=function(t,e){return W=L(),(E._q=E._q||[]).push([W,t,e]),W},E.ch=W,B="configSecurityConfModel",N[B]=1,O("//conf.config-security.com/model",0),O("//triplewhale-pixel.web.app/triplefw.txt?",5)))}}("","TriplePixel",localStorage);
/* << TriplePixel :: end*/
</script>
        <script defer src="https://www.googleoptimize.com/optimize.js?id=GTM-P75QQQQ"></script>
        
        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width,initial-scale=1">
        <meta name="theme-color" content="">
        <link rel="canonical" href="{{ canonical_url }}">
        <link rel="preconnect" href="https://cdn.shopify.com" crossorigin>
      
        {%- if settings.favicon != blank -%}
        <link rel="icon" type="image/png" href="{{ settings.favicon | image_url: width: 32, height: 32 }}">
        {%- endif -%}

        {%- unless settings.type_body_font.system? -%}
        <link rel="preconnect" href="https://fonts.shopifycdn.com" crossorigin>
        {%- endunless -%}

        <title>
        {{ page_title }}
        {%- if current_tags %} | tagged "{{ current_tags | join: ', ' }}"{% endif -%}
        {%- if current_page != 1 %} | Page {{ current_page }}{% endif -%}
        {%- unless page_title contains shop.name %} | {{ shop.name }}{% endunless -%}
        </title>

        {% if page_description %}
        <meta name="description" content="{{ page_description | escape }}">
        {% endif %}

        {% render 'meta-tags' %}

        {% unless settings.speed_debug %}
        <script src="{{ 'global.js' | asset_url }}" defer="defer"></script>
        <script src="{{ 'slider.js' | asset_url }}" defer="defer"></script>
        {% endunless %}

        {% if settings.speed_debug %}
            {% capture contentForHeader %}
                {{ content_for_header }}
            {% endcapture %}
        {% else %}
            {{ content_for_header }}
        {% endif %}

        {%- liquid
            assign body_font_italic = settings.type_body_font | font_modify: 'style', 'italic'
            assign body_font_bold = settings.type_body_font_bolder
            assign body_font_bold_italic = body_font_bold | font_modify: 'style', 'italic'

            assign body_font_black = settings.type_body_font_bold
            assign body_font_black_italic = body_font_black | font_modify: 'style', 'italic'
        %}

        {% style %}
        {{ settings.type_body_font | font_face: font_display: 'swap' }}
        {{ body_font_bold | font_face: font_display: 'swap' }}
        {{ body_font_black | font_face: font_display: 'swap' }}
        {{ body_font_italic | font_face: font_display: 'swap' }}
        {{ body_font_bold_italic | font_face: font_display: 'swap' }}
        {{ body_font_black_italic | font_face: font_display: 'swap' }}

        :root {
            --font-body-family: {{ settings.type_body_font.family }}, {{ settings.type_body_font.fallback_families }};
            --font-body-style: {{ settings.type_body_font.style }};
            --font-body-weight: {{ settings.type_body_font.weight }};
            --font-body-weight-bold: {{ body_font_bold.weight }};
            --font-body-weight-black: {{ body_font_black.weight }};
            
            --sale-price-color: {{ settings.sale_price_color }};
            --extra-sale-price-color: {{ settings.extra-sale_price_color }};

            --flash-accent: {{ settings.flash-sale-accent }};
            --flash-text: {{ settings.flash-sale-text-col }};

            --product-disclaimer-text: {{ settings.product-disclaimer-color }};

            --promo-msg-hgt: {{ settings.sale-msg-highlight-col }};
            --promo-msg-hgt-t: {{ settings.sale-msg-highlight-t-col }};
            --promo-msg-t: {{ settings.sale-msg-main-text }};
            --promo-msg-c-t: {{ settings.sale-msg-main-col-text }};

            --final-hgt: {{ settings.final-sale-highlight-col }};
            --final-hgt-t: {{ settings.final-sale-highlight-t-col }};
            --final-t: {{ settings.final-sale-main-text }};

            --preorder-hgt: {{ settings.preorder-highlight-col }};
            --preorder-hgt-t: {{ settings.preorder-highlight-t-col }};

            --sale-accent: {{ settings.sale_accent }};
            --sale-background: {{ settings.sale_background }};

            --extra-sale-accent: {{ settings.extra-sale_accent }};
            --extra-sale-background: {{ settings.extra-sale_background }};

            --sale-badge-bg: {{ settings.sale-badge-bg }};
            --sale-badge-color: {{ settings.sale-badge-color }};

            --product-unit-info-col: {{ settings.product-unit-info-col }};
            --product-unit-sw-limit: {{ settings.product-unit-sw-count }};
        }

        *,
        *::before,
        *::after {
            box-sizing: inherit;
        }

        html {
            box-sizing: border-box;
            font-size: 16px;
            height: 100%;
        }

        body {
            min-height: 100%;
            display: flex;
            flex-direction: column;
            line-height: 1.25em;
            font-family: var(--font-body-family);
            font-style: var(--font-body-style);
            font-weight: var(--font-body-weight);
        }
        {% endstyle %}

        {{ 'base.css' | asset_url | stylesheet_tag: preload: true }}
        {{ 'component-product-common.css' | asset_url | stylesheet_tag }}

        {% unless settings.speed_debug %}
        <link rel="stylesheet" href="{{ 'component-product-unit.css' | asset_url }}" media="print" onload="this.media='all'">
        <noscript>{{ 'component-product-unit.css' | asset_url | stylesheet_tag }}</noscript>
        
        <link rel="stylesheet" href="{{ 'component-floating-labels.css' | asset_url }}" media="print" onload="this.media='all'">
        <noscript>{{ 'component-floating-labels.css' | asset_url | stylesheet_tag }}</noscript>

        <link rel="stylesheet" href="{{ 'video.css' | asset_url }}" media="print" onload="this.media='all'">
        <noscript>{{ 'video.css' | asset_url | stylesheet_tag }}</noscript>

        <link rel="stylesheet" href="{{ 'component-slider.css' | asset_url }}" media="print" onload="this.media='all'">
        <noscript>{{ 'component-slider.css' | asset_url | stylesheet_tag }}</noscript>
        {% endunless %}

        {%- unless settings.type_body_font.system? -%}
            <link rel="preload" as="font" href="{{ settings.type_body_font | font_url }}" type="font/woff2" crossorigin>
        {%- endunless -%}

        {% comment %} {%- unless settings.type_body_font_bolder.system? -%}
            <link rel="preload" as="font" href="{{ settings.type_header_font | font_url }}" type="font/woff2" crossorigin>
        {%- endunless -%} {% endcomment %}

        {% comment %} <script>
            document.documentElement.className = document.documentElement.className.replace('no-js', 'js');
            if (Shopify.designMode) {
                document.documentElement.classList.add('shopify-design-mode');
            }
        </script> {% endcomment %}
        
        {% unless settings.speed_debug %}
            {%- render 'header-scripts' -%}
        {% endunless %}

        {% render "schema" %}

        <script>
        window.debug = false;
        window.shopUrl = '{{ request.origin }}';
        window.assetUrl = '{{ "asset.svg" | asset_url }}';
        window.filesUrl = '{{ "file.svg" | file_url }}';

        window.routes = {
            cart_add_url: '{{ routes.cart_add_url }}',
            cart_change_url: '{{ routes.cart_change_url }}',
            cart_update_url: '{{ routes.cart_update_url }}',
            cart_url: '{{ routes.cart_url }}'
        };

        window.scripts = {
            quickview: `{{ 'quick-view.js' | asset_url }}`,
            variants: `{{ 'variants.js' | asset_url }}`,
            filter: `{{ 'filter.js' | asset_url }}`,
            menu: `{{ 'menu.js' | asset_url }}`,
            cart: `{{ 'cart.js' | asset_url }}`,
            ups: `{{ 'ups.js' | asset_url }}`,
            pdp: `{{ 'pdp.js' | asset_url }}`,
            klaviyo: 'https://a.klaviyo.com/media/js/onsite/onsite.js',
            wishlist: `{{ 'wishlist.js' | asset_url }}`,
            gwp: `{{ 'gwp.js' | asset_url }}`
        }

        window.styles = {
            cart: `{{ 'section-cart.css' | asset_url }}`,
            pdp: `{{ 'section-pdp.css' | asset_url }}`,
            pdpGallery: `{{ 'component-pdp-gallery.css' | asset_url }}`,
            quickview: `{{ 'component-quick-view.css' | asset_url }}`,
            starRating: `{{ 'component-star-rating.css' | asset_url }}`,
            waitlist: `{{ 'component-waitlist.css' | asset_url }}`,
            wishlist: `{{ 'component-wishlist.css' | asset_url }}`,
            wishlistPopup: `{{ 'component-wishlist-popup.css' | asset_url }}`,
            tooltip: `{{ 'component-tooltip.css' | asset_url }}`
        }

        window.settings = {
            bestSellers: {{ settings.best-sellers.handle | json }},
            newArrivals: {{ settings.new-arrivals.handle | json }},
            swatchesLimit: {{ settings.product-unit-sw-count }},
            freeShipping: {{ settings.free-shipping | times: 100 | json }},
            wishlistTimeout: {{ settings.wishlist-popup-timeout | json }}
        }
        </script>
      <script src="https://cdn-widgetsrepository.yotpo.com/v1/loader/j0R3HMDaDyhf40m2xcICbQ" async></script>
 <!-- Extend -- Render Extend SDK Configuration script -->
      {% render 'extend-configuration' %}
      <!-- Extend -- End Extend code -->
</head>

    <body class="template-{{ template | replace: '.', '-' }}">
        {% unless settings.speed_debug %}
        <div class="header-container">
        {% section 'promo-bar' %}
        {% section 'header' %}

            {% render 'wishlist-popup' %}
            {% section 'mobile-menu' %}
            {% section 'search' %}
        
            {% section 'gwp' %}
            {%- if template != 'cart' -%}
                {% section 'cart' %}
            {%- endif -%}

            <section class="header__container">
                {% section 'notifications' %}
                {% section 'header-banner' %}
            </section>
            </div>
        {% endunless %}


        
        <main id="MainContent" class="content-for-layout focus-none" role="main" tabindex="-1">
            {{ content_for_layout }}
        </main>

        {% unless settings.speed_debug %}
            {% section 'contact-form' %}
            {% comment %} {% section 'cookies' %} {% endcomment %}
        {% section 'footer' %}
        {% endunless %}

        <ul hidden>
            <li id="a11y-refresh-page-message">{{ 'accessibility.refresh_page' | t }}</li>
            <li id="a11y-new-window-message">{{ 'accessibility.link_messages.new_window' | t }}</li>
        </ul>

        {% unless settings.speed_debug %}
            {%- render 'footer-scripts' -%}
        {% endunless %}
    
{% include 'swymSnippet' %}
<script>
window.addEventListener('load', function() {
var _learnq = window._learnq || [];
function addedToCart() {
  fetch(`${window.location.origin}/cart.js`)
  .then(res => res.clone().json().then(data => {
    var cart = {
      total_price: data.total_price/100,
      $value: data.total_price/100,
      total_discount: data.total_discount,
      original_total_price: data.original_total_price/100,
      items: data.items
    }
    if (item !== 'undefined') {
      cart = Object.assign(cart, item)
    }
    if (klAjax) {
        _learnq.push(['track', 'Added to Cart', cart]);
        klAjax = false;
      }
  }))
};
(function (ns, fetch) {
  ns.fetch = function() {
    const response = fetch.apply(this, arguments);
    response.then(res => {
      if (`${window.location.origin}/cart/add.js`
      	.includes(res.url)) {
        	addedToCart()
      }
    });
    return response
  }
}(window, window.fetch));
var klAjax = true;
var atcButtons = document.querySelectorAll("form[action*='/cart/add'] button[type='submit']");
for (var i = 0; i < atcButtons.length; i++) {
    atcButtons[i].addEventListener("click", function() {
      if (klAjax) {
        _learnq.push(['track', 'Added to Cart', item]);
        klAjax = false;
      }
    })
}
});
</script>

{% if settings.countdown-label-collection-enabled and template contains 'collection'%}
    <script>
        console.log('testing')
        const addLabelToCollectionProductUnit = e => {
            if(document.querySelector('html').clientWidth < 900) {
                if([...document.querySelectorAll('.countdown-sale-badge-label')].length < 1) {
                    
                    let products = document.querySelectorAll('.product-unit.product-unit--quickadd.product-unit--add-sale-badge');
                    [...products].map((productUnit, index) => {
                        if(!productUnit.classList.contains('slide')) {
                            let newLabelText = document.createTextNode('{{- settings.sale-badge-text | escape | newline_to_br | replace: '%%', discount -}}');
                            let newLabel = document.createElement('p');
    
                            newLabel.setAttribute('class', 'countdown-sale-badge-label');        
                            newLabel.setAttribute('id', `countdown-sale-badge-label-${Math.random().toString().slice(2,11) + index}`);
                            newLabel.appendChild(newLabelText);
                            
                            productUnit.appendChild(newLabel);
                        }
                    });
                }
            } else {
                [...document.querySelectorAll('.countdown-sale-badge-label')].map(countdownSaleBadgeLabel => countdownSaleBadgeLabel.parentNode.removeChild(countdownSaleBadgeLabel));
            }
        };

        document.addEventListener("DOMContentLoaded", addLabelToCollectionProductUnit);
        window.addEventListener("resize", addLabelToCollectionProductUnit);
        document.addEventListener("shopify:section:load", addLabelToCollectionProductUnit);
        try {
            addLabelToCollectionProductUnit();
        } catch(e) {
            setTimeout(addLabelToCollectionProductUnit, 1000);
        }
    </script>
{% endif %}
</body>
</html>